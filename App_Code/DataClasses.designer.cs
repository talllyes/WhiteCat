#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db823292d13be1409f85a2a6bd00d88f73")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void InsertRole(Role instance);
  partial void UpdateRole(Role instance);
  partial void DeleteRole(Role instance);
  partial void InsertPick(Pick instance);
  partial void UpdatePick(Pick instance);
  partial void DeletePick(Pick instance);
  partial void InsertRank(Rank instance);
  partial void UpdateRank(Rank instance);
  partial void DeleteRank(Rank instance);
  partial void InsertScene(Scene instance);
  partial void UpdateScene(Scene instance);
  partial void DeleteScene(Scene instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db823292d13be1409f85a2a6bd00d88f73ConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Role> Role
	{
		get
		{
			return this.GetTable<Role>();
		}
	}
	
	public System.Data.Linq.Table<Pick> Pick
	{
		get
		{
			return this.GetTable<Pick>();
		}
	}
	
	public System.Data.Linq.Table<Rank> Rank
	{
		get
		{
			return this.GetTable<Rank>();
		}
	}
	
	public System.Data.Linq.Table<Scene> Scene
	{
		get
		{
			return this.GetTable<Scene>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RoleID;
	
	private string _Name;
	
	private string _Star;
	
	private string _Src;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStarChanging(string value);
    partial void OnStarChanged();
    partial void OnSrcChanging(string value);
    partial void OnSrcChanged();
    #endregion
	
	public Role()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RoleID
	{
		get
		{
			return this._RoleID;
		}
		set
		{
			if ((this._RoleID != value))
			{
				this.OnRoleIDChanging(value);
				this.SendPropertyChanging();
				this._RoleID = value;
				this.SendPropertyChanged("RoleID");
				this.OnRoleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Star", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
	public string Star
	{
		get
		{
			return this._Star;
		}
		set
		{
			if ((this._Star != value))
			{
				this.OnStarChanging(value);
				this.SendPropertyChanging();
				this._Star = value;
				this.SendPropertyChanged("Star");
				this.OnStarChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Src", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string Src
	{
		get
		{
			return this._Src;
		}
		set
		{
			if ((this._Src != value))
			{
				this.OnSrcChanging(value);
				this.SendPropertyChanging();
				this._Src = value;
				this.SendPropertyChanged("Src");
				this.OnSrcChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pick")]
public partial class Pick : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PickID;
	
	private int _RoleID;
	
	private string _star;
	
	private int _SceneID;
	
	private int _Num;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPickIDChanging(int value);
    partial void OnPickIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnstarChanging(string value);
    partial void OnstarChanged();
    partial void OnSceneIDChanging(int value);
    partial void OnSceneIDChanged();
    partial void OnNumChanging(int value);
    partial void OnNumChanged();
    #endregion
	
	public Pick()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PickID
	{
		get
		{
			return this._PickID;
		}
		set
		{
			if ((this._PickID != value))
			{
				this.OnPickIDChanging(value);
				this.SendPropertyChanging();
				this._PickID = value;
				this.SendPropertyChanged("PickID");
				this.OnPickIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
	public int RoleID
	{
		get
		{
			return this._RoleID;
		}
		set
		{
			if ((this._RoleID != value))
			{
				this.OnRoleIDChanging(value);
				this.SendPropertyChanging();
				this._RoleID = value;
				this.SendPropertyChanged("RoleID");
				this.OnRoleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_star", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
	public string star
	{
		get
		{
			return this._star;
		}
		set
		{
			if ((this._star != value))
			{
				this.OnstarChanging(value);
				this.SendPropertyChanging();
				this._star = value;
				this.SendPropertyChanged("star");
				this.OnstarChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneID", DbType="Int NOT NULL")]
	public int SceneID
	{
		get
		{
			return this._SceneID;
		}
		set
		{
			if ((this._SceneID != value))
			{
				this.OnSceneIDChanging(value);
				this.SendPropertyChanging();
				this._SceneID = value;
				this.SendPropertyChanged("SceneID");
				this.OnSceneIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="Int NOT NULL")]
	public int Num
	{
		get
		{
			return this._Num;
		}
		set
		{
			if ((this._Num != value))
			{
				this.OnNumChanging(value);
				this.SendPropertyChanging();
				this._Num = value;
				this.SendPropertyChanged("Num");
				this.OnNumChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank")]
public partial class Rank : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _RankID;
	
	private int _SceneID;
	
	private string _Type;
	
	private string _RankContent;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRankIDChanging(int value);
    partial void OnRankIDChanged();
    partial void OnSceneIDChanging(int value);
    partial void OnSceneIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnRankContentChanging(string value);
    partial void OnRankContentChanged();
    #endregion
	
	public Rank()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int RankID
	{
		get
		{
			return this._RankID;
		}
		set
		{
			if ((this._RankID != value))
			{
				this.OnRankIDChanging(value);
				this.SendPropertyChanging();
				this._RankID = value;
				this.SendPropertyChanged("RankID");
				this.OnRankIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneID", DbType="Int NOT NULL")]
	public int SceneID
	{
		get
		{
			return this._SceneID;
		}
		set
		{
			if ((this._SceneID != value))
			{
				this.OnSceneIDChanging(value);
				this.SendPropertyChanging();
				this._SceneID = value;
				this.SendPropertyChanged("SceneID");
				this.OnSceneIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankContent", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string RankContent
	{
		get
		{
			return this._RankContent;
		}
		set
		{
			if ((this._RankContent != value))
			{
				this.OnRankContentChanging(value);
				this.SendPropertyChanging();
				this._RankContent = value;
				this.SendPropertyChanged("RankContent");
				this.OnRankContentChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scene")]
public partial class Scene : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SceneID;
	
	private string _Name;
	
	private System.DateTime _StartDate;
	
	private System.DateTime _EndDate;
	
	private string _Src;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSceneIDChanging(int value);
    partial void OnSceneIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnSrcChanging(string value);
    partial void OnSrcChanged();
    #endregion
	
	public Scene()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SceneID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SceneID
	{
		get
		{
			return this._SceneID;
		}
		set
		{
			if ((this._SceneID != value))
			{
				this.OnSceneIDChanging(value);
				this.SendPropertyChanging();
				this._SceneID = value;
				this.SendPropertyChanged("SceneID");
				this.OnSceneIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
	public System.DateTime EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Src", DbType="VarChar(50)")]
	public string Src
	{
		get
		{
			return this._Src;
		}
		set
		{
			if ((this._Src != value))
			{
				this.OnSrcChanging(value);
				this.SendPropertyChanging();
				this._Src = value;
				this.SendPropertyChanged("Src");
				this.OnSrcChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
